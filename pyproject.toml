# Poetry Configuration
[tool.poetry]
authors = ["kaizen <admin@kaizen.wtf>"]
description = "All Things Linux Discord Bot"
name = "tux"
readme = "README.md"
repository = "https://github.com/allthingslinux/tux"
version = "0.1.0"

[tool.poetry.dependencies]
aiohttp = "3.9.1"
colorlog = ">=6.8.0"
discord-py = "^2.3.2"
loguru = "^0.7.2"
mypy = "^1.9.0"
pre-commit = "^3.6.0"
prisma = "^0.13.1"
pyright = "^1.1.343"
python = "^3.11"
python-dotenv = ">=1.0.0"
ruff = "^0.3.4"
sentry-sdk = "^1.43.0"
supabase = "^2.4.0"

[tool.poetry.scripts]
pyright = "pyright:run"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

# Black Configuration
[tool.black]
include = '\.pyi?$'
line-length = 88
target-version = ['py311']

# Ruff Configuration
[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "examples",
]
indent-width = 4
line-length = 88
target-version = "py311"

# Ruff Linting Configuration
[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = ["E501"]
select = [
  "E",
  "F",
  "UP",
  "B",
  "SIM",
  "I",
]
unfixable = []

# Ruff Formatting Configuration
[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

# Pyright Configuration
[tool.pyright]
defineConstant = {DEBUG = true}
exclude = [
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "examples",
  "tests",
]
include = ["tux"]
pythonPlatform = "Linux"
pythonVersion = "3.11"
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."
# reportMissingImports = true
# reportMissingParameterType = false
# reportMissingTypeStubs = false
# reportUnknownArgumentType = false
# reportUnknownMemberType = false
# reportUnknownParameterType = false

[tool.prisma]
binary_cache_dir = '.binaries'

[tool.mypy]
plugins = ["prisma.mypy"]
python_version = "3.11"
